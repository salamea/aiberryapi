name: Deploy to Dev

on:
  push:
    branches: [qa]
  workflow_dispatch:

env:
  IMAGE_NAME: bsalamea/aiberry-api
  GITOPS_REPO: bsalamea/aiberry-workspace
  GITOPS_PATH: k8s/overlays/dev/kustomization.yaml

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout API code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate image tag
        id: image
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "tag=dev-${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "full_image=${{ env.IMAGE_NAME }}:dev-${SHORT_SHA}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ steps.image.outputs.full_image }}
            ${{ env.IMAGE_NAME }}:dev-latest
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Checkout GitOps repo
        uses: actions/checkout@v3
        with:
          repository: ${{ env.GITOPS_REPO }}
          token: ${{ secrets.GITOPS_TOKEN }}
          path: gitops

      - name: Update Kustomization with new image
        working-directory: gitops
        run: |
          cd k8s/overlays/dev

          # Update image tag in kustomization.yaml
          sed -i "s|newTag:.*# aiberry-api|newTag: ${{ steps.image.outputs.tag }} # aiberry-api|g" kustomization.yaml

          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add kustomization.yaml
          git commit -m "Update aiberry-api to ${{ steps.image.outputs.tag }}"
          git push

      - name: Wait for ArgoCD sync (optional)
        run: |
          echo "Image updated in GitOps repo"
          echo "ArgoCD will automatically sync in ~3 minutes"
          echo "Or manually sync: kubectl argo app sync aiberry-app-dev"
